{
   "openapi":"3.0.3",
   "info":{
      "title":"api",
      "description":"",
      "license":{
         "name":""
      },
      "version":"0.1.0"
   },
   "paths":{
      "/api/ecommerce/v1/delBusiness/{model_id}":{
         "delete":{
            "tags":[
               "business"
            ],
            "summary":"Delete a business",
            "description":"Delete a business",
            "operationId":"delete_business_handler",
            "parameters":[
               {
                  "name":"model_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Delete a new business",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/response.BusinessResponse"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "required":[
                              "Err"
                           ],
                           "properties":{
                              "Err":{
                                 "type":"string"
                              }
                           }
                        }
                     }
                  }
               },
               "404":{
                  "description":"Business was not found",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "required":[
                              "Err"
                           ],
                           "properties":{
                              "Err":{
                                 "type":"string"
                              }
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/ecommerce/v1/generateAccessToken":{
         "post":{
            "tags":[
               "jwt"
            ],
            "summary":"Generate the token",
            "description":"Generate the token",
            "operationId":"generate_access_token_handler",
            "requestBody":{
               "description":"",
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/RequestData"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Generate token",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/RequestData"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "required":[
                              "Err"
                           ],
                           "properties":{
                              "Err":{
                                 "type":"string"
                              }
                           }
                        }
                     }
                  }
               },
               "404":{
                  "description":"Business was not found",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "required":[
                              "Err"
                           ],
                           "properties":{
                              "Err":{
                                 "type":"string"
                              }
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/ecommerce/v1/getBusiness":{
         "get":{
            "tags":[
               "business"
            ],
            "summary":"Get all businesses",
            "description":"Get all businesses",
            "operationId":"list_businesses_handler",
            "responses":{
               "200":{
                  "description":"Get all businesses",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/response.BusinessesResponse"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "required":[
                              "Err"
                           ],
                           "properties":{
                              "Err":{
                                 "type":"string"
                              }
                           }
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "business"
            ],
            "summary":"Get a business by API data",
            "description":"Get a business by API data",
            "operationId":"list_business_by_api_handler",
            "requestBody":{
               "description":"",
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/BusinessCreated"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Get a business identifies with api data",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Business"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "required":[
                              "Err"
                           ],
                           "properties":{
                              "Err":{
                                 "type":"string"
                              }
                           }
                        }
                     }
                  }
               },
               "404":{
                  "description":"Business was not found",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "required":[
                              "Err"
                           ],
                           "properties":{
                              "Err":{
                                 "type":"string"
                              }
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/ecommerce/v1/getBusiness/{model_id}":{
         "get":{
            "tags":[
               "business"
            ],
            "summary":"Get a business by id",
            "description":"Get a business by id",
            "operationId":"list_business_by_id_handler",
            "parameters":[
               {
                  "name":"model_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a business identifies with id",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Business"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "required":[
                              "Err"
                           ],
                           "properties":{
                              "Err":{
                                 "type":"string"
                              }
                           }
                        }
                     }
                  }
               },
               "404":{
                  "description":"Business was not found",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "required":[
                              "Err"
                           ],
                           "properties":{
                              "Err":{
                                 "type":"string"
                              }
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/ecommerce/v1/getInvoice":{
         "post":{
            "tags":[
               "invoice"
            ],
            "summary":"Get an invoice",
            "description":"Get an invoice",
            "operationId":"list_invoice_handler",
            "requestBody":{
               "description":"",
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/InvoiceFilters"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Get an invoice identifies with payment_hash",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/modelsext.InvoiceResp"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "required":[
                              "Err"
                           ],
                           "properties":{
                              "Err":{
                                 "type":"string"
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"Not authorizated",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "required":[
                              "Err"
                           ],
                           "properties":{
                              "Err":{
                                 "type":"string"
                              }
                           }
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "bearerAuth":[
                     
                  ]
               }
            ]
         }
      },
      "/api/ecommerce/v1/getOrder":{
         "post":{
            "tags":[
               "invoice"
            ],
            "summary":"Get an order",
            "description":"Get an order",
            "operationId":"list_order_handler",
            "requestBody":{
               "description":"",
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/OrderFilters"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Get an order identifies with uuid",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/modelsext.InvoiceResp"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "required":[
                              "Err"
                           ],
                           "properties":{
                              "Err":{
                                 "type":"string"
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"Not authorizated",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "required":[
                              "Err"
                           ],
                           "properties":{
                              "Err":{
                                 "type":"string"
                              }
                           }
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "bearerAuth":[
                     
                  ]
               }
            ]
         }
      },
      "/api/ecommerce/v1/getSatoshi":{
         "post":{
            "tags":[
               "test"
            ],
            "summary":"Convert a total amount to Satoshis",
            "description":"Convert a total amount to Satoshis",
            "operationId":"get_price_bitcoin_handler",
            "requestBody":{
               "description":"",
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/CurrencyFilters"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Get info of bitcoin price"
               },
               "400":{
                  "description":"Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "required":[
                              "Err"
                           ],
                           "properties":{
                              "Err":{
                                 "type":"string"
                              }
                           }
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "bearerAuth":[
                     
                  ]
               }
            ]
         }
      },
      "/api/ecommerce/v1/newBusiness":{
         "post":{
            "tags":[
               "business"
            ],
            "summary":"Create a business",
            "description":"Create a business",
            "operationId":"create_business_handler",
            "requestBody":{
               "description":"",
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/NewBusiness"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Create a new business",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/response.BusinessResponse"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "required":[
                              "Err"
                           ],
                           "properties":{
                              "Err":{
                                 "type":"string"
                              }
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/ecommerce/v1/newBusinessApi":{
         "post":{
            "tags":[
               "business"
            ],
            "summary":"Generate API data",
            "description":"Generate API data",
            "operationId":"generate_data_api_handler",
            "requestBody":{
               "description":"",
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/NewUser"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Generate data api",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/response.BusinessResponse"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "required":[
                              "Err"
                           ],
                           "properties":{
                              "Err":{
                                 "type":"string"
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"Not authorizated",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "required":[
                              "Err"
                           ],
                           "properties":{
                              "Err":{
                                 "type":"string"
                              }
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/ecommerce/v1/savePreorder":{
         "post":{
            "tags":[
               "invoice"
            ],
            "summary":"Save an order",
            "description":"Save an order",
            "operationId":"save_preorder_handler",
            "requestBody":{
               "description":"",
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/NewInvoice"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Create a new pre order",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/modelsext.InvoiceResp"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "required":[
                              "Err"
                           ],
                           "properties":{
                              "Err":{
                                 "type":"string"
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"Not authorizated",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "required":[
                              "Err"
                           ],
                           "properties":{
                              "Err":{
                                 "type":"string"
                              }
                           }
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "bearerAuth":[
                     
                  ]
               }
            ]
         }
      },
      "/api/ecommerce/v1/updBusiness":{
         "put":{
            "tags":[
               "business"
            ],
            "summary":"Update a business",
            "description":"Update a business",
            "operationId":"update_business_handler",
            "requestBody":{
               "description":"",
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/Business"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Modify a new business",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/response.BusinessResponse"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "required":[
                              "Err"
                           ],
                           "properties":{
                              "Err":{
                                 "type":"string"
                              }
                           }
                        }
                     }
                  }
               },
               "404":{
                  "description":"Business was not found",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "required":[
                              "Err"
                           ],
                           "properties":{
                              "Err":{
                                 "type":"string"
                              }
                           }
                        }
                     }
                  }
               }
            }
         }
      }
   },
   "components":{
      "schemas":{
         "Business":{
            "type":"object",
            "description":"Define a structure to represent data of the businesses",
            "required":[
               "id",
               "app_name",
               "app_logo",
               "app_url",
               "api_id",
               "api_secret",
               "workspace_id",
               "notify_customer",
               "notify_email",
               "notify_webhook",
               "link_timeout",
               "link_amount",
               "link_count",
               "ask_name",
               "ask_mobile",
               "ask_email",
               "ask_address",
               "created_at",
               "updated_at",
               "enabled",
               "apply_split",
               "ln_address"
            ],
            "properties":{
               "api_id":{
                  "type":"string",
                  "description":"Represents the identifier of the API"
               },
               "api_secret":{
                  "type":"string",
                  "description":"Represents the secret of the API"
               },
               "app_logo":{
                  "type":"string",
                  "description":"Represents the route of the application logo"
               },
               "app_name":{
                  "type":"string",
                  "description":"Represents the name of the application (Business)"
               },
               "app_url":{
                  "type":"string",
                  "description":"Represents the URL of the application"
               },
               "apply_split":{
                  "type":"boolean",
                  "description":"Represents whether split payment applies"
               },
               "ask_address":{
                  "type":"boolean",
                  "description":"Indicates whether ask address"
               },
               "ask_email":{
                  "type":"boolean",
                  "description":"Indicates whether ask email"
               },
               "ask_mobile":{
                  "type":"boolean",
                  "description":"Indicates whether ask mobile"
               },
               "ask_name":{
                  "type":"boolean",
                  "description":"Indicates whether ask name"
               },
               "created_at":{
                  "type":"string",
                  "format":"date",
                  "description":"Represents the date of creation"
               },
               "enabled":{
                  "type":"boolean",
                  "description":"Represents whether is an enabled business"
               },
               "id":{
                  "type":"integer",
                  "format":"int32",
                  "description":"Represents the identifier of the business"
               },
               "link_amount":{
                  "type":"boolean",
                  "description":"Represents the amount of the link"
               },
               "link_count":{
                  "type":"boolean",
                  "description":"Represents the count of the link"
               },
               "link_timeout":{
                  "type":"integer",
                  "format":"int32",
                  "description":"Represents the timeout of the link"
               },
               "link_url_pay":{
                  "type":"string",
                  "description":"Represents the URL of the payment link",
                  "nullable":true
               },
               "ln_address":{
                  "type":"string",
                  "description":"Represents the address LNURL"
               },
               "notify_customer":{
                  "type":"boolean",
                  "description":"Indicates whether the customer must be notified"
               },
               "notify_email":{
                  "type":"boolean",
                  "description":"Indicates whether the customer must be notified by email"
               },
               "notify_webhook":{
                  "type":"boolean",
                  "description":"Represents the webhook to notify"
               },
               "set_emails":{
                  "type":"string",
                  "description":"Represents the emails to notify",
                  "nullable":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date",
                  "description":"Represents the update date"
               },
               "url_redirect":{
                  "type":"string",
                  "description":"Represents the URL to redirect",
                  "nullable":true
               },
               "url_webhook":{
                  "type":"string",
                  "description":"Represents the URL of the webhook",
                  "nullable":true
               },
               "workspace_id":{
                  "type":"string",
                  "description":"Represents the identifier of the workspace"
               }
            }
         },
         "BusinessCreated":{
            "type":"object",
            "description":"Define a structure to show data of the API",
            "required":[
               "api_id",
               "api_secret"
            ],
            "properties":{
               "api_id":{
                  "type":"string",
                  "description":"Represents the identifier of the API"
               },
               "api_secret":{
                  "type":"string",
                  "description":"Represents the secret of the API"
               }
            }
         },
         "CurrencyFilters":{
            "type":"object",
            "description":"Define a structure to save currency and total amount of the transaction",
            "required":[
               "currency",
               "total_amount"
            ],
            "properties":{
               "currency":{
                  "type":"string",
                  "description":"Represents the currency"
               },
               "total_amount":{
                  "type":"string",
                  "description":"Represents the total amount"
               }
            }
         },
         "InvoiceFilters":{
            "type":"object",
            "description":"Define a structure to filter the invoice by hash",
            "required":[
               "hash"
            ],
            "properties":{
               "hash":{
                  "type":"string",
                  "description":"Represents the hash of the invoice"
               }
            }
         },
         "NewBusiness":{
            "type":"object",
            "description":"Define a structure to represent data of the businesses",
            "required":[
               "app_name",
               "app_logo",
               "app_url",
               "api_id",
               "api_secret",
               "workspace_id",
               "notify_customer",
               "notify_email",
               "notify_webhook",
               "link_timeout",
               "link_amount",
               "link_count",
               "ask_name",
               "ask_mobile",
               "ask_email",
               "ask_address",
               "created_at",
               "updated_at",
               "enabled",
               "apply_split",
               "ln_address"
            ],
            "properties":{
               "api_id":{
                  "type":"string",
                  "description":"Represents the identifier of the API"
               },
               "api_secret":{
                  "type":"string",
                  "description":"Represents the secret of the API"
               },
               "app_logo":{
                  "type":"string",
                  "description":"Represents the route of the application logo"
               },
               "app_name":{
                  "type":"string",
                  "description":"Represents the name of the application (Business)"
               },
               "app_url":{
                  "type":"string",
                  "description":"Represents the URL of the application"
               },
               "apply_split":{
                  "type":"boolean",
                  "description":"Represents whether split payment applies"
               },
               "ask_address":{
                  "type":"boolean",
                  "description":"Indicates whether ask address"
               },
               "ask_email":{
                  "type":"boolean",
                  "description":"Indicates whether ask email"
               },
               "ask_mobile":{
                  "type":"boolean",
                  "description":"Indicates whether ask mobile"
               },
               "ask_name":{
                  "type":"boolean",
                  "description":"Indicates whether ask name"
               },
               "created_at":{
                  "type":"string",
                  "format":"date",
                  "description":"Represents the date of creation"
               },
               "enabled":{
                  "type":"boolean",
                  "description":"Represents whether is an enabled business"
               },
               "link_amount":{
                  "type":"boolean",
                  "description":"Represents the amount of the link"
               },
               "link_count":{
                  "type":"boolean",
                  "description":"Represents the count of the link"
               },
               "link_timeout":{
                  "type":"integer",
                  "format":"int32",
                  "description":"Represents the timeout of the link"
               },
               "link_url_pay":{
                  "type":"string",
                  "description":"Represents the URL of the payment link",
                  "nullable":true
               },
               "ln_address":{
                  "type":"string",
                  "description":"Represents the address LNURL"
               },
               "notify_customer":{
                  "type":"boolean",
                  "description":"Indicates whether the customer must be notified"
               },
               "notify_email":{
                  "type":"boolean",
                  "description":"Indicates whether the customer must be notified by email"
               },
               "notify_webhook":{
                  "type":"boolean",
                  "description":"Represents the webhook to notify"
               },
               "set_emails":{
                  "type":"string",
                  "description":"Represents the emails to notify",
                  "nullable":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date",
                  "description":"Represents the update date"
               },
               "url_redirect":{
                  "type":"string",
                  "description":"Represents the URL to redirect",
                  "nullable":true
               },
               "url_webhook":{
                  "type":"string",
                  "description":"Represents the URL of the webhook",
                  "nullable":true
               },
               "workspace_id":{
                  "type":"string",
                  "description":"Represents the identifier of the workspace"
               }
            }
         },
         "NewInvoice":{
            "type":"object",
            "required":[
               "businessId",
               "orderId",
               "customerName",
               "customerEmail",
               "currency",
               "subTotal",
               "taxes",
               "shipping",
               "totalAmount",
               "totalSats",
               "invoiceDate",
               "invoiceStamp",
               "applySplit",
               "details"
            ],
            "properties":{
               "applySplit":{
                  "type":"boolean",
                  "description":"Represents whether split payment applies"
               },
               "businessId":{
                  "type":"integer",
                  "format":"int32",
                  "description":"Represents the identifier of the business"
               },
               "currency":{
                  "type":"string",
                  "description":"Represents the currency of the transaction"
               },
               "customerEmail":{
                  "type":"string",
                  "description":"Represents the email of the email"
               },
               "customerName":{
                  "type":"string",
                  "description":"Represents the name of the customer"
               },
               "details":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/NewInvoiceDet"
                  },
                  "description":"Represents the details of products of the order"
               },
               "invoiceDate":{
                  "type":"string",
                  "format":"date",
                  "description":"Represents the date of the order"
               },
               "invoiceStamp":{
                  "type":"string",
                  "description":"Represents the datetime of the transaction"
               },
               "orderId":{
                  "type":"integer",
                  "format":"int32",
                  "description":"Represents the identifier of the order"
               },
               "shipping":{
                  "type":"string",
                  "description":"Represents the shipping of the order"
               },
               "subTotal":{
                  "type":"string",
                  "description":"Represents the subtotal of the order"
               },
               "taxes":{
                  "type":"string",
                  "description":"Represents the taxes of the order"
               },
               "totalAmount":{
                  "type":"string",
                  "description":"Represents the total amount of the order"
               },
               "totalSats":{
                  "type":"integer",
                  "format":"int64",
                  "description":"Represents the total sats of the order"
               }
            }
         },
         "NewInvoiceDet":{
            "type":"object",
            "description":"Define a structure to represent data of the products of the invoice",
            "required":[
               "productId",
               "productName",
               "quantity",
               "subTotal",
               "taxes",
               "grandTotal",
               "totalSats"
            ],
            "properties":{
               "grandTotal":{
                  "type":"string",
                  "description":"Represents the grand total of the product"
               },
               "productId":{
                  "type":"integer",
                  "format":"int32",
                  "description":"Represents the identifier of the product"
               },
               "productName":{
                  "type":"string",
                  "description":"Represents the name of the product"
               },
               "quantity":{
                  "type":"integer",
                  "format":"int32",
                  "description":"Represents the quantity of the product"
               },
               "subTotal":{
                  "type":"string",
                  "description":"Represents the subtotal of the product"
               },
               "taxes":{
                  "type":"string",
                  "description":"Represents the taxes of the product"
               },
               "totalSats":{
                  "type":"integer",
                  "format":"int64",
                  "description":"Represents the total sats of the product"
               }
            }
         },
         "NewUser":{
            "type":"object",
            "description":"Define a structure to represent data of the user",
            "required":[
               "email"
            ],
            "properties":{
               "email":{
                  "type":"string",
                  "description":"Represents the authorized email"
               },
               "password":{
                  "type":"string",
                  "description":"Represents the authorized password",
                  "nullable":true
               }
            }
         },
         "OrderFilters":{
            "type":"object",
            "description":"Define a structure to represent the filter of the order",
            "required":[
               "uuid"
            ],
            "properties":{
               "uuid":{
                  "type":"string",
                  "description":"Represents the identifier of the order"
               }
            }
         },
         "RequestData":{
            "type":"object",
            "description":"Define a structure to represent data to generate token",
            "properties":{
               "audience":{
                  "type":"string",
                  "description":"Represents the audience",
                  "nullable":true
               },
               "client_id":{
                  "type":"string",
                  "description":"Represents the identifier of the API",
                  "nullable":true
               },
               "client_secret":{
                  "type":"string",
                  "description":"Represents the secret of the API",
                  "nullable":true
               },
               "grant_type":{
                  "type":"string",
                  "description":"Represents the grant type",
                  "nullable":true
               }
            }
         }
      },
      "securitySchemes":{
         "bearerAuth":{
            "type":"http",
            "scheme":"bearer"
         }
      }
   }
}